// Code generated by kod struct2interface; DO NOT EDIT.

package server

import (
	"context"
	"net/http"

	"github.com/nautilus/graphql"
	"github.com/vektah/gqlparser/v2/ast"
	"google.golang.org/grpc"
	"google.golang.org/protobuf/proto"
	"google.golang.org/protobuf/reflect/protoreflect"
)

// reflection is a component that implements Reflection.
type Reflection interface {
	ListPackages(ctx context.Context, cc grpc.ClientConnInterface) ([]protoreflect.FileDescriptor, error)
}

// server is a component that implements Gateway.
type Gateway interface {
	BuildServer() (http.Handler, error)
}

// caller is a component that implements Caller.
type Caller interface {
	Call(ctx context.Context, rpc protoreflect.MethodDescriptor, message proto.Message) (proto.Message, error)
	FindMethodByName(op ast.Operation, name string) protoreflect.MethodDescriptor
	GraphQLSchema() *ast.Schema
	Marshal(proto proto.Message, field *ast.Field) (interface{}, error)
	Unmarshal(desc protoreflect.MessageDescriptor, field *ast.Field, vars map[string]interface{}) (proto.Message, error)
}

// queryer is a component that implements Queryer.
type Queryer interface {
	Query(ctx context.Context, input *graphql.QueryInput, result interface{}) error
}
