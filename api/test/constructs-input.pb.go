// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: test/constructs-input.proto

package test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bar int32

const (
	Bar_BAR1 Bar = 0
	Bar_BAR2 Bar = 1
	Bar_BAR3 Bar = 2
)

// Enum value maps for Bar.
var (
	Bar_name = map[int32]string{
		0: "BAR1",
		1: "BAR2",
		2: "BAR3",
	}
	Bar_value = map[string]int32{
		"BAR1": 0,
		"BAR2": 1,
		"BAR3": 2,
	}
)

func (x Bar) Enum() *Bar {
	p := new(Bar)
	*p = x
	return p
}

func (x Bar) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bar) Descriptor() protoreflect.EnumDescriptor {
	return file_test_constructs_input_proto_enumTypes[0].Descriptor()
}

func (Bar) Type() protoreflect.EnumType {
	return &file_test_constructs_input_proto_enumTypes[0]
}

func (x Bar) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bar.Descriptor instead.
func (Bar) EnumDescriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{0}
}

type Ref_Foo_En int32

const (
	Ref_Foo_A0 Ref_Foo_En = 0
	Ref_Foo_A1 Ref_Foo_En = 1
)

// Enum value maps for Ref_Foo_En.
var (
	Ref_Foo_En_name = map[int32]string{
		0: "A0",
		1: "A1",
	}
	Ref_Foo_En_value = map[string]int32{
		"A0": 0,
		"A1": 1,
	}
)

func (x Ref_Foo_En) Enum() *Ref_Foo_En {
	p := new(Ref_Foo_En)
	*p = x
	return p
}

func (x Ref_Foo_En) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ref_Foo_En) Descriptor() protoreflect.EnumDescriptor {
	return file_test_constructs_input_proto_enumTypes[1].Descriptor()
}

func (Ref_Foo_En) Type() protoreflect.EnumType {
	return &file_test_constructs_input_proto_enumTypes[1]
}

func (x Ref_Foo_En) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ref_Foo_En.Descriptor instead.
func (Ref_Foo_En) EnumDescriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{12, 1, 0}
}

type Ref_Foo_Bar_En int32

const (
	Ref_Foo_Bar_A0 Ref_Foo_Bar_En = 0
	Ref_Foo_Bar_A1 Ref_Foo_Bar_En = 1
)

// Enum value maps for Ref_Foo_Bar_En.
var (
	Ref_Foo_Bar_En_name = map[int32]string{
		0: "A0",
		1: "A1",
	}
	Ref_Foo_Bar_En_value = map[string]int32{
		"A0": 0,
		"A1": 1,
	}
)

func (x Ref_Foo_Bar_En) Enum() *Ref_Foo_Bar_En {
	p := new(Ref_Foo_Bar_En)
	*p = x
	return p
}

func (x Ref_Foo_Bar_En) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ref_Foo_Bar_En) Descriptor() protoreflect.EnumDescriptor {
	return file_test_constructs_input_proto_enumTypes[2].Descriptor()
}

func (Ref_Foo_Bar_En) Type() protoreflect.EnumType {
	return &file_test_constructs_input_proto_enumTypes[2]
}

func (x Ref_Foo_Bar_En) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ref_Foo_Bar_En.Descriptor instead.
func (Ref_Foo_Bar_En) EnumDescriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{12, 1, 1, 0}
}

type AnyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Any *anypb.Any `protobuf:"bytes,1,opt,name=any,proto3" json:"any,omitempty"`
}

func (x *AnyInput) Reset() {
	*x = AnyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyInput) ProtoMessage() {}

func (x *AnyInput) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyInput.ProtoReflect.Descriptor instead.
func (*AnyInput) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{0}
}

func (x *AnyInput) GetAny() *anypb.Any {
	if x != nil {
		return x.Any
	}
	return nil
}

type Empty3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I *Empty3_Int `protobuf:"bytes,1,opt,name=i,proto3" json:"i,omitempty"`
}

func (x *Empty3) Reset() {
	*x = Empty3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty3) ProtoMessage() {}

func (x *Empty3) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty3.ProtoReflect.Descriptor instead.
func (*Empty3) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{1}
}

func (x *Empty3) GetI() *Empty3_Int {
	if x != nil {
		return x.I
	}
	return nil
}

type Foo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
	Param2 string `protobuf:"bytes,2,opt,name=param2,proto3" json:"param2,omitempty"`
}

func (x *Foo) Reset() {
	*x = Foo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Foo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Foo) ProtoMessage() {}

func (x *Foo) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Foo.ProtoReflect.Descriptor instead.
func (*Foo) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{2}
}

func (x *Foo) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

func (x *Foo) GetParam2() string {
	if x != nil {
		return x.Param2
	}
	return ""
}

type Baz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
}

func (x *Baz) Reset() {
	*x = Baz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Baz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Baz) ProtoMessage() {}

func (x *Baz) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Baz.ProtoReflect.Descriptor instead.
func (*Baz) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{3}
}

func (x *Baz) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

type Scalars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   float64                `protobuf:"fixed64,1,opt,name=double,proto3" json:"double,omitempty"`
	Float    float32                `protobuf:"fixed32,2,opt,name=float,proto3" json:"float,omitempty"`
	Int32    int32                  `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64    int64                  `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32   uint32                 `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   uint64                 `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   int32                  `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   int64                  `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  uint32                 `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64                 `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32                  `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64                  `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     bool                   `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	StringX  string                 `protobuf:"bytes,14,opt,name=string_x,json=stringX,proto3" json:"string_x,omitempty"` // x for collisions with go method String
	Bytes    []byte                 `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Paths    *fieldmaskpb.FieldMask `protobuf:"bytes,16,opt,name=paths,proto3" json:"paths,omitempty"`
}

func (x *Scalars) Reset() {
	*x = Scalars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scalars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scalars) ProtoMessage() {}

func (x *Scalars) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scalars.ProtoReflect.Descriptor instead.
func (*Scalars) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{4}
}

func (x *Scalars) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *Scalars) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *Scalars) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *Scalars) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *Scalars) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *Scalars) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *Scalars) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *Scalars) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *Scalars) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *Scalars) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *Scalars) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *Scalars) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *Scalars) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *Scalars) GetStringX() string {
	if x != nil {
		return x.StringX
	}
	return ""
}

func (x *Scalars) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *Scalars) GetPaths() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Paths
	}
	return nil
}

type Repeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   []float64 `protobuf:"fixed64,1,rep,packed,name=double,proto3" json:"double,omitempty"`
	Float    []float32 `protobuf:"fixed32,2,rep,packed,name=float,proto3" json:"float,omitempty"`
	Int32    []int32   `protobuf:"varint,3,rep,packed,name=int32,proto3" json:"int32,omitempty"`
	Int64    []int64   `protobuf:"varint,4,rep,packed,name=int64,proto3" json:"int64,omitempty"`
	Uint32   []uint32  `protobuf:"varint,5,rep,packed,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   []uint64  `protobuf:"varint,6,rep,packed,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   []int32   `protobuf:"zigzag32,7,rep,packed,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   []int64   `protobuf:"zigzag64,8,rep,packed,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  []uint32  `protobuf:"fixed32,9,rep,packed,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  []uint64  `protobuf:"fixed64,10,rep,packed,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 []int32   `protobuf:"fixed32,11,rep,packed,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 []int64   `protobuf:"fixed64,12,rep,packed,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     []bool    `protobuf:"varint,13,rep,packed,name=bool,proto3" json:"bool,omitempty"`
	StringX  []string  `protobuf:"bytes,14,rep,name=string_x,json=stringX,proto3" json:"string_x,omitempty"`
	Bytes    [][]byte  `protobuf:"bytes,15,rep,name=bytes,proto3" json:"bytes,omitempty"`
	Foo      []*Foo    `protobuf:"bytes,16,rep,name=foo,proto3" json:"foo,omitempty"`
	Bar      []Bar     `protobuf:"varint,17,rep,packed,name=bar,proto3,enum=constructs.Bar" json:"bar,omitempty"`
}

func (x *Repeated) Reset() {
	*x = Repeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repeated) ProtoMessage() {}

func (x *Repeated) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repeated.ProtoReflect.Descriptor instead.
func (*Repeated) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{5}
}

func (x *Repeated) GetDouble() []float64 {
	if x != nil {
		return x.Double
	}
	return nil
}

func (x *Repeated) GetFloat() []float32 {
	if x != nil {
		return x.Float
	}
	return nil
}

func (x *Repeated) GetInt32() []int32 {
	if x != nil {
		return x.Int32
	}
	return nil
}

func (x *Repeated) GetInt64() []int64 {
	if x != nil {
		return x.Int64
	}
	return nil
}

func (x *Repeated) GetUint32() []uint32 {
	if x != nil {
		return x.Uint32
	}
	return nil
}

func (x *Repeated) GetUint64() []uint64 {
	if x != nil {
		return x.Uint64
	}
	return nil
}

func (x *Repeated) GetSint32() []int32 {
	if x != nil {
		return x.Sint32
	}
	return nil
}

func (x *Repeated) GetSint64() []int64 {
	if x != nil {
		return x.Sint64
	}
	return nil
}

func (x *Repeated) GetFixed32() []uint32 {
	if x != nil {
		return x.Fixed32
	}
	return nil
}

func (x *Repeated) GetFixed64() []uint64 {
	if x != nil {
		return x.Fixed64
	}
	return nil
}

func (x *Repeated) GetSfixed32() []int32 {
	if x != nil {
		return x.Sfixed32
	}
	return nil
}

func (x *Repeated) GetSfixed64() []int64 {
	if x != nil {
		return x.Sfixed64
	}
	return nil
}

func (x *Repeated) GetBool() []bool {
	if x != nil {
		return x.Bool
	}
	return nil
}

func (x *Repeated) GetStringX() []string {
	if x != nil {
		return x.StringX
	}
	return nil
}

func (x *Repeated) GetBytes() [][]byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *Repeated) GetFoo() []*Foo {
	if x != nil {
		return x.Foo
	}
	return nil
}

func (x *Repeated) GetBar() []Bar {
	if x != nil {
		return x.Bar
	}
	return nil
}

type Maps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int32Int32       map[int32]int32    `protobuf:"bytes,1,rep,name=int32_int32,json=int32Int32,proto3" json:"int32_int32,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Int64Int64       map[int64]int64    `protobuf:"bytes,2,rep,name=int64_int64,json=int64Int64,proto3" json:"int64_int64,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Uint32Uint32     map[uint32]uint32  `protobuf:"bytes,3,rep,name=uint32_uint32,json=uint32Uint32,proto3" json:"uint32_uint32,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Uint64Uint64     map[uint64]uint64  `protobuf:"bytes,4,rep,name=uint64_uint64,json=uint64Uint64,proto3" json:"uint64_uint64,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Sint32Sint32     map[int32]int32    `protobuf:"bytes,5,rep,name=sint32_sint32,json=sint32Sint32,proto3" json:"sint32_sint32,omitempty" protobuf_key:"zigzag32,1,opt,name=key,proto3" protobuf_val:"zigzag32,2,opt,name=value,proto3"`
	Sint64Sint64     map[int64]int64    `protobuf:"bytes,6,rep,name=sint64_sint64,json=sint64Sint64,proto3" json:"sint64_sint64,omitempty" protobuf_key:"zigzag64,1,opt,name=key,proto3" protobuf_val:"zigzag64,2,opt,name=value,proto3"`
	Fixed32Fixed32   map[uint32]uint32  `protobuf:"bytes,7,rep,name=fixed32_fixed32,json=fixed32Fixed32,proto3" json:"fixed32_fixed32,omitempty" protobuf_key:"fixed32,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	Fixed64Fixed64   map[uint64]uint64  `protobuf:"bytes,8,rep,name=fixed64_fixed64,json=fixed64Fixed64,proto3" json:"fixed64_fixed64,omitempty" protobuf_key:"fixed64,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Sfixed32Sfixed32 map[int32]int32    `protobuf:"bytes,9,rep,name=sfixed32_sfixed32,json=sfixed32Sfixed32,proto3" json:"sfixed32_sfixed32,omitempty" protobuf_key:"fixed32,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	Sfixed64Sfixed64 map[int64]int64    `protobuf:"bytes,10,rep,name=sfixed64_sfixed64,json=sfixed64Sfixed64,proto3" json:"sfixed64_sfixed64,omitempty" protobuf_key:"fixed64,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	BoolBool         map[bool]bool      `protobuf:"bytes,11,rep,name=bool_bool,json=boolBool,proto3" json:"bool_bool,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StringString     map[string]string  `protobuf:"bytes,12,rep,name=string_string,json=stringString,proto3" json:"string_string,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StringBytes      map[string][]byte  `protobuf:"bytes,15,rep,name=string_bytes,json=stringBytes,proto3" json:"string_bytes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StringFloat      map[string]float32 `protobuf:"bytes,16,rep,name=string_float,json=stringFloat,proto3" json:"string_float,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	StringDouble     map[string]float64 `protobuf:"bytes,17,rep,name=string_double,json=stringDouble,proto3" json:"string_double,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	StringFoo        map[string]*Foo    `protobuf:"bytes,13,rep,name=string_foo,json=stringFoo,proto3" json:"string_foo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StringBar        map[string]Bar     `protobuf:"bytes,14,rep,name=string_bar,json=stringBar,proto3" json:"string_bar,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=constructs.Bar"`
}

func (x *Maps) Reset() {
	*x = Maps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Maps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Maps) ProtoMessage() {}

func (x *Maps) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Maps.ProtoReflect.Descriptor instead.
func (*Maps) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{6}
}

func (x *Maps) GetInt32Int32() map[int32]int32 {
	if x != nil {
		return x.Int32Int32
	}
	return nil
}

func (x *Maps) GetInt64Int64() map[int64]int64 {
	if x != nil {
		return x.Int64Int64
	}
	return nil
}

func (x *Maps) GetUint32Uint32() map[uint32]uint32 {
	if x != nil {
		return x.Uint32Uint32
	}
	return nil
}

func (x *Maps) GetUint64Uint64() map[uint64]uint64 {
	if x != nil {
		return x.Uint64Uint64
	}
	return nil
}

func (x *Maps) GetSint32Sint32() map[int32]int32 {
	if x != nil {
		return x.Sint32Sint32
	}
	return nil
}

func (x *Maps) GetSint64Sint64() map[int64]int64 {
	if x != nil {
		return x.Sint64Sint64
	}
	return nil
}

func (x *Maps) GetFixed32Fixed32() map[uint32]uint32 {
	if x != nil {
		return x.Fixed32Fixed32
	}
	return nil
}

func (x *Maps) GetFixed64Fixed64() map[uint64]uint64 {
	if x != nil {
		return x.Fixed64Fixed64
	}
	return nil
}

func (x *Maps) GetSfixed32Sfixed32() map[int32]int32 {
	if x != nil {
		return x.Sfixed32Sfixed32
	}
	return nil
}

func (x *Maps) GetSfixed64Sfixed64() map[int64]int64 {
	if x != nil {
		return x.Sfixed64Sfixed64
	}
	return nil
}

func (x *Maps) GetBoolBool() map[bool]bool {
	if x != nil {
		return x.BoolBool
	}
	return nil
}

func (x *Maps) GetStringString() map[string]string {
	if x != nil {
		return x.StringString
	}
	return nil
}

func (x *Maps) GetStringBytes() map[string][]byte {
	if x != nil {
		return x.StringBytes
	}
	return nil
}

func (x *Maps) GetStringFloat() map[string]float32 {
	if x != nil {
		return x.StringFloat
	}
	return nil
}

func (x *Maps) GetStringDouble() map[string]float64 {
	if x != nil {
		return x.StringDouble
	}
	return nil
}

func (x *Maps) GetStringFoo() map[string]*Foo {
	if x != nil {
		return x.StringFoo
	}
	return nil
}

func (x *Maps) GetStringBar() map[string]Bar {
	if x != nil {
		return x.StringBar
	}
	return nil
}

type Any struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
}

func (x *Any) Reset() {
	*x = Any{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Any) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any) ProtoMessage() {}

func (x *Any) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any.ProtoReflect.Descriptor instead.
func (*Any) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{7}
}

func (x *Any) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{8}
}

type EmptyRecursive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nested1 *emptypb.Empty  `protobuf:"bytes,1,opt,name=nested1,proto3" json:"nested1,omitempty"`
	Empty   *EmptyRecursive `protobuf:"bytes,2,opt,name=empty,proto3" json:"empty,omitempty"`
}

func (x *EmptyRecursive) Reset() {
	*x = EmptyRecursive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRecursive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRecursive) ProtoMessage() {}

func (x *EmptyRecursive) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRecursive.ProtoReflect.Descriptor instead.
func (*EmptyRecursive) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{9}
}

func (x *EmptyRecursive) GetNested1() *emptypb.Empty {
	if x != nil {
		return x.Nested1
	}
	return nil
}

func (x *EmptyRecursive) GetEmpty() *EmptyRecursive {
	if x != nil {
		return x.Empty
	}
	return nil
}

type EmptyNested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nested1 *EmptyNested_EmptyNested1 `protobuf:"bytes,1,opt,name=nested1,proto3" json:"nested1,omitempty"`
}

func (x *EmptyNested) Reset() {
	*x = EmptyNested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyNested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyNested) ProtoMessage() {}

func (x *EmptyNested) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyNested.ProtoReflect.Descriptor instead.
func (*EmptyNested) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{10}
}

func (x *EmptyNested) GetNested1() *EmptyNested_EmptyNested1 {
	if x != nil {
		return x.Nested1
	}
	return nil
}

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{11}
}

func (x *Timestamp) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Empty      *emptypb.Empty         `protobuf:"bytes,10,opt,name=empty,proto3" json:"empty,omitempty"` // must disappear as part of is empty validation
	LocalTime2 *Timestamp             `protobuf:"bytes,12,opt,name=local_time2,json=localTime2,proto3" json:"local_time2,omitempty"`
	External   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=external,proto3" json:"external,omitempty"`
	LocalTime  *Timestamp             `protobuf:"bytes,11,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	File       *Baz                   `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	FileMsg    *Foo                   `protobuf:"bytes,8,opt,name=file_msg,json=fileMsg,proto3" json:"file_msg,omitempty"`
	FileEnum   Bar                    `protobuf:"varint,9,opt,name=file_enum,json=fileEnum,proto3,enum=constructs.Bar" json:"file_enum,omitempty"`
	Local      *Ref_Foo               `protobuf:"bytes,3,opt,name=local,proto3" json:"local,omitempty"`
	Foreign    *Foo_Foo2              `protobuf:"bytes,4,opt,name=foreign,proto3" json:"foreign,omitempty"`
	En1        Ref_Foo_En             `protobuf:"varint,5,opt,name=en1,proto3,enum=constructs.Ref_Foo_En" json:"en1,omitempty"`
	En2        Ref_Foo_Bar_En         `protobuf:"varint,6,opt,name=en2,proto3,enum=constructs.Ref_Foo_Bar_En" json:"en2,omitempty"`
	Gz         *Ref_Foo_Baz_Gz        `protobuf:"bytes,7,opt,name=gz,proto3" json:"gz,omitempty"`
}

func (x *Ref) Reset() {
	*x = Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{12}
}

func (x *Ref) GetEmpty() *emptypb.Empty {
	if x != nil {
		return x.Empty
	}
	return nil
}

func (x *Ref) GetLocalTime2() *Timestamp {
	if x != nil {
		return x.LocalTime2
	}
	return nil
}

func (x *Ref) GetExternal() *timestamppb.Timestamp {
	if x != nil {
		return x.External
	}
	return nil
}

func (x *Ref) GetLocalTime() *Timestamp {
	if x != nil {
		return x.LocalTime
	}
	return nil
}

func (x *Ref) GetFile() *Baz {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Ref) GetFileMsg() *Foo {
	if x != nil {
		return x.FileMsg
	}
	return nil
}

func (x *Ref) GetFileEnum() Bar {
	if x != nil {
		return x.FileEnum
	}
	return Bar_BAR1
}

func (x *Ref) GetLocal() *Ref_Foo {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *Ref) GetForeign() *Foo_Foo2 {
	if x != nil {
		return x.Foreign
	}
	return nil
}

func (x *Ref) GetEn1() Ref_Foo_En {
	if x != nil {
		return x.En1
	}
	return Ref_Foo_A0
}

func (x *Ref) GetEn2() Ref_Foo_Bar_En {
	if x != nil {
		return x.En2
	}
	return Ref_Foo_Bar_A0
}

func (x *Ref) GetGz() *Ref_Foo_Baz_Gz {
	if x != nil {
		return x.Gz
	}
	return nil
}

type Oneof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
	// Types that are assignable to Oneof1:
	//
	//	*Oneof_Param2
	//	*Oneof_Param3
	Oneof1 isOneof_Oneof1 `protobuf_oneof:"Oneof1"`
	// Types that are assignable to Oneof2:
	//
	//	*Oneof_Param4
	//	*Oneof_Param5
	Oneof2 isOneof_Oneof2 `protobuf_oneof:"Oneof2"`
	// Types that are assignable to Oneof3:
	//
	//	*Oneof_Param6
	Oneof3 isOneof_Oneof3 `protobuf_oneof:"Oneof3"`
}

func (x *Oneof) Reset() {
	*x = Oneof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oneof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oneof) ProtoMessage() {}

func (x *Oneof) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oneof.ProtoReflect.Descriptor instead.
func (*Oneof) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{13}
}

func (x *Oneof) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

func (m *Oneof) GetOneof1() isOneof_Oneof1 {
	if m != nil {
		return m.Oneof1
	}
	return nil
}

func (x *Oneof) GetParam2() string {
	if x, ok := x.GetOneof1().(*Oneof_Param2); ok {
		return x.Param2
	}
	return ""
}

func (x *Oneof) GetParam3() string {
	if x, ok := x.GetOneof1().(*Oneof_Param3); ok {
		return x.Param3
	}
	return ""
}

func (m *Oneof) GetOneof2() isOneof_Oneof2 {
	if m != nil {
		return m.Oneof2
	}
	return nil
}

func (x *Oneof) GetParam4() string {
	if x, ok := x.GetOneof2().(*Oneof_Param4); ok {
		return x.Param4
	}
	return ""
}

func (x *Oneof) GetParam5() string {
	if x, ok := x.GetOneof2().(*Oneof_Param5); ok {
		return x.Param5
	}
	return ""
}

func (m *Oneof) GetOneof3() isOneof_Oneof3 {
	if m != nil {
		return m.Oneof3
	}
	return nil
}

func (x *Oneof) GetParam6() string {
	if x, ok := x.GetOneof3().(*Oneof_Param6); ok {
		return x.Param6
	}
	return ""
}

type isOneof_Oneof1 interface {
	isOneof_Oneof1()
}

type Oneof_Param2 struct {
	Param2 string `protobuf:"bytes,2,opt,name=param2,proto3,oneof"`
}

type Oneof_Param3 struct {
	Param3 string `protobuf:"bytes,3,opt,name=param3,proto3,oneof"`
}

func (*Oneof_Param2) isOneof_Oneof1() {}

func (*Oneof_Param3) isOneof_Oneof1() {}

type isOneof_Oneof2 interface {
	isOneof_Oneof2()
}

type Oneof_Param4 struct {
	Param4 string `protobuf:"bytes,4,opt,name=param4,proto3,oneof"`
}

type Oneof_Param5 struct {
	Param5 string `protobuf:"bytes,5,opt,name=param5,proto3,oneof"`
}

func (*Oneof_Param4) isOneof_Oneof2() {}

func (*Oneof_Param5) isOneof_Oneof2() {}

type isOneof_Oneof3 interface {
	isOneof_Oneof3()
}

type Oneof_Param6 struct {
	Param6 string `protobuf:"bytes,6,opt,name=param6,proto3,oneof"`
}

func (*Oneof_Param6) isOneof_Oneof3() {}

type Empty3_Int struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E *Empty3 `protobuf:"bytes,1,opt,name=e,proto3" json:"e,omitempty"`
}

func (x *Empty3_Int) Reset() {
	*x = Empty3_Int{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty3_Int) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty3_Int) ProtoMessage() {}

func (x *Empty3_Int) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty3_Int.ProtoReflect.Descriptor instead.
func (*Empty3_Int) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Empty3_Int) GetE() *Empty3 {
	if x != nil {
		return x.E
	}
	return nil
}

type Foo_Foo2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
}

func (x *Foo_Foo2) Reset() {
	*x = Foo_Foo2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Foo_Foo2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Foo_Foo2) ProtoMessage() {}

func (x *Foo_Foo2) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Foo_Foo2.ProtoReflect.Descriptor instead.
func (*Foo_Foo2) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Foo_Foo2) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

type EmptyNested_EmptyNested1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nested2 *EmptyNested_EmptyNested1_EmptyNested2 `protobuf:"bytes,1,opt,name=nested2,proto3" json:"nested2,omitempty"`
}

func (x *EmptyNested_EmptyNested1) Reset() {
	*x = EmptyNested_EmptyNested1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyNested_EmptyNested1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyNested_EmptyNested1) ProtoMessage() {}

func (x *EmptyNested_EmptyNested1) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyNested_EmptyNested1.ProtoReflect.Descriptor instead.
func (*EmptyNested_EmptyNested1) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{10, 0}
}

func (x *EmptyNested_EmptyNested1) GetNested2() *EmptyNested_EmptyNested1_EmptyNested2 {
	if x != nil {
		return x.Nested2
	}
	return nil
}

type EmptyNested_EmptyNested1_EmptyNested2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyNested_EmptyNested1_EmptyNested2) Reset() {
	*x = EmptyNested_EmptyNested1_EmptyNested2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyNested_EmptyNested1_EmptyNested2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyNested_EmptyNested1_EmptyNested2) ProtoMessage() {}

func (x *EmptyNested_EmptyNested1_EmptyNested2) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyNested_EmptyNested1_EmptyNested2.ProtoReflect.Descriptor instead.
func (*EmptyNested_EmptyNested1_EmptyNested2) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{10, 0, 0}
}

type Ref_Bar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
}

func (x *Ref_Bar) Reset() {
	*x = Ref_Bar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Bar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Bar) ProtoMessage() {}

func (x *Ref_Bar) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Bar.ProtoReflect.Descriptor instead.
func (*Ref_Bar) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Ref_Bar) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

type Ref_Foo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bar1          *Ref_Foo_Bar           `protobuf:"bytes,1,opt,name=bar1,proto3" json:"bar1,omitempty"`
	LocalTime2    *Timestamp             `protobuf:"bytes,12,opt,name=local_time2,json=localTime2,proto3" json:"local_time2,omitempty"`
	ExternalTime1 *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=external_time1,json=externalTime1,proto3" json:"external_time1,omitempty"`
	Bar2          *Ref_Bar               `protobuf:"bytes,2,opt,name=bar2,proto3" json:"bar2,omitempty"`
	En1           Ref_Foo_En             `protobuf:"varint,3,opt,name=en1,proto3,enum=constructs.Ref_Foo_En" json:"en1,omitempty"`
	En2           Ref_Foo_Bar_En         `protobuf:"varint,4,opt,name=en2,proto3,enum=constructs.Ref_Foo_Bar_En" json:"en2,omitempty"`
}

func (x *Ref_Foo) Reset() {
	*x = Ref_Foo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Foo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Foo) ProtoMessage() {}

func (x *Ref_Foo) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Foo.ProtoReflect.Descriptor instead.
func (*Ref_Foo) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{12, 1}
}

func (x *Ref_Foo) GetBar1() *Ref_Foo_Bar {
	if x != nil {
		return x.Bar1
	}
	return nil
}

func (x *Ref_Foo) GetLocalTime2() *Timestamp {
	if x != nil {
		return x.LocalTime2
	}
	return nil
}

func (x *Ref_Foo) GetExternalTime1() *timestamppb.Timestamp {
	if x != nil {
		return x.ExternalTime1
	}
	return nil
}

func (x *Ref_Foo) GetBar2() *Ref_Bar {
	if x != nil {
		return x.Bar2
	}
	return nil
}

func (x *Ref_Foo) GetEn1() Ref_Foo_En {
	if x != nil {
		return x.En1
	}
	return Ref_Foo_A0
}

func (x *Ref_Foo) GetEn2() Ref_Foo_Bar_En {
	if x != nil {
		return x.En2
	}
	return Ref_Foo_Bar_A0
}

type Ref_Foo_Baz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ref_Foo_Baz) Reset() {
	*x = Ref_Foo_Baz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Foo_Baz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Foo_Baz) ProtoMessage() {}

func (x *Ref_Foo_Baz) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Foo_Baz.ProtoReflect.Descriptor instead.
func (*Ref_Foo_Baz) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{12, 1, 0}
}

type Ref_Foo_Bar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
}

func (x *Ref_Foo_Bar) Reset() {
	*x = Ref_Foo_Bar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Foo_Bar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Foo_Bar) ProtoMessage() {}

func (x *Ref_Foo_Bar) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Foo_Bar.ProtoReflect.Descriptor instead.
func (*Ref_Foo_Bar) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{12, 1, 1}
}

func (x *Ref_Foo_Bar) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

type Ref_Foo_Baz_Gz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param1 string `protobuf:"bytes,1,opt,name=param1,proto3" json:"param1,omitempty"`
}

func (x *Ref_Foo_Baz_Gz) Reset() {
	*x = Ref_Foo_Baz_Gz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_constructs_input_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Foo_Baz_Gz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Foo_Baz_Gz) ProtoMessage() {}

func (x *Ref_Foo_Baz_Gz) ProtoReflect() protoreflect.Message {
	mi := &file_test_constructs_input_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Foo_Baz_Gz.ProtoReflect.Descriptor instead.
func (*Ref_Foo_Baz_Gz) Descriptor() ([]byte, []int) {
	return file_test_constructs_input_proto_rawDescGZIP(), []int{12, 1, 0, 0}
}

func (x *Ref_Foo_Baz_Gz) GetParam1() string {
	if x != nil {
		return x.Param1
	}
	return ""
}

var File_test_constructs_input_proto protoreflect.FileDescriptor

var file_test_constructs_input_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x73, 0x2d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x08, 0x41, 0x6e, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x26, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x03, 0x61, 0x6e, 0x79, 0x22, 0x57, 0x0a, 0x06, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x33, 0x12, 0x24, 0x0a, 0x01, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x33, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x69, 0x1a, 0x27, 0x0a, 0x03, 0x49, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x01, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x33, 0x52, 0x01,
	0x65, 0x22, 0x55, 0x0a, 0x03, 0x46, 0x6f, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x1a, 0x1e, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x22, 0x1d, 0x0a, 0x03, 0x42, 0x61, 0x7a, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x22, 0xa6, 0x03, 0x0a, 0x07, 0x53, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0f, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x10, 0x52,
	0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x30,
	0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73,
	0x22, 0xbb, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x18, 0x07, 0x20, 0x03, 0x28, 0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x03, 0x28, 0x12, 0x52,
	0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x18, 0x09, 0x20, 0x03, 0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x06, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x08, 0x73,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x78, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x73, 0x2e, 0x46, 0x6f, 0x6f, 0x52, 0x03, 0x66, 0x6f, 0x6f, 0x12, 0x21, 0x0a, 0x03, 0x62,
	0x61, 0x72, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x03, 0x62, 0x61, 0x72, 0x22, 0xc2,
	0x12, 0x0a, 0x04, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x41, 0x0a, 0x0b, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x47, 0x0a,
	0x0d, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x55, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x47, 0x0a, 0x0d, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e,
	0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12,
	0x47, 0x0a, 0x0d, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x53,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70,
	0x73, 0x2e, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x53, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x4d, 0x0a, 0x0f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x12, 0x4d, 0x0a, 0x0f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0e, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12,
	0x53, 0x0a, 0x11, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x53, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x10, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x53, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x12, 0x53, 0x0a, 0x11, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70,
	0x73, 0x2e, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x3b, 0x0a, 0x09, 0x62, 0x6f, 0x6f,
	0x6c, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x62, 0x6f,
	0x6f, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x44, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x4d, 0x61, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x6f, 0x6f, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x6f, 0x6f, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62,
	0x61, 0x72, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x72, 0x1a, 0x3d, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x55, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x55, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x53,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x15,
	0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0f, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x43, 0x0a, 0x15, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x53, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x10, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6c, 0x42, 0x6f,
	0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4d, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46,
	0x6f, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x6f, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4d, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x1d, 0x0a, 0x03, 0x41, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x31, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x74, 0x0a, 0x0e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x30, 0x0a,
	0x07, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x07, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x31, 0x12,
	0x30, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0xba, 0x01, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x12, 0x3e, 0x0a, 0x07, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x31, 0x52, 0x07, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x31, 0x1a, 0x6b, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x31, 0x12, 0x4b, 0x0a, 0x07, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x32, 0x52, 0x07, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x32, 0x1a, 0x0e,
	0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x32, 0x22, 0x1f,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xf7, 0x07, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x05,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x12, 0x36, 0x0a,
	0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x7a, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x2a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x46, 0x6f, 0x6f, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x72,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x05, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x46, 0x6f, 0x6f, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x73, 0x2e, 0x46, 0x6f, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x32, 0x52, 0x07, 0x66, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x12, 0x28, 0x0a, 0x03, 0x65, 0x6e, 0x31, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x52, 0x65, 0x66, 0x2e, 0x46, 0x6f, 0x6f, 0x2e, 0x45, 0x6e, 0x52, 0x03, 0x65, 0x6e, 0x31, 0x12,
	0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x46, 0x6f,
	0x6f, 0x2e, 0x42, 0x61, 0x72, 0x2e, 0x45, 0x6e, 0x52, 0x03, 0x65, 0x6e, 0x32, 0x12, 0x2a, 0x0a,
	0x02, 0x67, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x46, 0x6f, 0x6f, 0x2e, 0x42,
	0x61, 0x7a, 0x2e, 0x47, 0x7a, 0x52, 0x02, 0x67, 0x7a, 0x1a, 0x1d, 0x0a, 0x03, 0x42, 0x61, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x1a, 0x9e, 0x03, 0x0a, 0x03, 0x46, 0x6f, 0x6f,
	0x12, 0x2b, 0x0a, 0x04, 0x62, 0x61, 0x72, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x2e,
	0x46, 0x6f, 0x6f, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x04, 0x62, 0x61, 0x72, 0x31, 0x12, 0x36, 0x0a,
	0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x32, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x32, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x31, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x61, 0x72, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x04, 0x62, 0x61, 0x72,
	0x32, 0x12, 0x28, 0x0a, 0x03, 0x65, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x2e,
	0x46, 0x6f, 0x6f, 0x2e, 0x45, 0x6e, 0x52, 0x03, 0x65, 0x6e, 0x31, 0x12, 0x2c, 0x0a, 0x03, 0x65,
	0x6e, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x46, 0x6f, 0x6f, 0x2e, 0x42, 0x61,
	0x72, 0x2e, 0x45, 0x6e, 0x52, 0x03, 0x65, 0x6e, 0x32, 0x1a, 0x23, 0x0a, 0x03, 0x42, 0x61, 0x7a,
	0x1a, 0x1c, 0x0a, 0x02, 0x47, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x1a, 0x33,
	0x0a, 0x03, 0x42, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x22, 0x14, 0x0a,
	0x02, 0x45, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x30, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x41,
	0x31, 0x10, 0x01, 0x22, 0x14, 0x0a, 0x02, 0x45, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x30, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x31, 0x10, 0x01, 0x22, 0xbf, 0x01, 0x0a, 0x05, 0x4f, 0x6e,
	0x65, 0x6f, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x18, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x12,
	0x18, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x35, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x36, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x36, 0x42, 0x08, 0x0a,
	0x06, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x31, 0x42, 0x08, 0x0a, 0x06, 0x4f, 0x6e, 0x65, 0x6f, 0x66,
	0x32, 0x42, 0x08, 0x0a, 0x06, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x33, 0x2a, 0x23, 0x0a, 0x03, 0x42,
	0x61, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x41, 0x52, 0x31, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x42, 0x41, 0x52, 0x32, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x41, 0x52, 0x33, 0x10, 0x02,
	0x32, 0xc4, 0x04, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x34, 0x0a, 0x08, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x5f, 0x12, 0x13, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73,
	0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x63,
	0x61, 0x6c, 0x61, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2b,
	0x0a, 0x05, 0x4d, 0x61, 0x70, 0x73, 0x5f, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x41,
	0x6e, 0x79, 0x5f, 0x12, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x12,
	0x33, 0x0a, 0x06, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x07, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x5f, 0x12,
	0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x1a, 0x17, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x33, 0x5f, 0x12,
	0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x33, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x33, 0x12, 0x28, 0x0a, 0x04, 0x52, 0x65, 0x66, 0x5f, 0x12,
	0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x66,
	0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x66, 0x12, 0x2e, 0x0a, 0x06, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x12, 0x11, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x1a, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x6e, 0x65, 0x6f,
	0x66, 0x12, 0x32, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12,
	0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x41, 0x6e, 0x79, 0x77, 0x61, 0x79, 0x5f,
	0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x6e,
	0x79, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x41,
	0x6e, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x9f, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x42, 0x14, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x79, 0x73, 0x75, 0x6c, 0x71, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0xca, 0x02, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x73, 0xe2, 0x02, 0x16, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_test_constructs_input_proto_rawDescOnce sync.Once
	file_test_constructs_input_proto_rawDescData = file_test_constructs_input_proto_rawDesc
)

func file_test_constructs_input_proto_rawDescGZIP() []byte {
	file_test_constructs_input_proto_rawDescOnce.Do(func() {
		file_test_constructs_input_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_constructs_input_proto_rawDescData)
	})
	return file_test_constructs_input_proto_rawDescData
}

var file_test_constructs_input_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_test_constructs_input_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_test_constructs_input_proto_goTypes = []interface{}{
	(Bar)(0),                         // 0: constructs.Bar
	(Ref_Foo_En)(0),                  // 1: constructs.Ref.Foo.En
	(Ref_Foo_Bar_En)(0),              // 2: constructs.Ref.Foo.Bar.En
	(*AnyInput)(nil),                 // 3: constructs.AnyInput
	(*Empty3)(nil),                   // 4: constructs.Empty3
	(*Foo)(nil),                      // 5: constructs.Foo
	(*Baz)(nil),                      // 6: constructs.Baz
	(*Scalars)(nil),                  // 7: constructs.Scalars
	(*Repeated)(nil),                 // 8: constructs.Repeated
	(*Maps)(nil),                     // 9: constructs.Maps
	(*Any)(nil),                      // 10: constructs.Any
	(*Empty)(nil),                    // 11: constructs.Empty
	(*EmptyRecursive)(nil),           // 12: constructs.EmptyRecursive
	(*EmptyNested)(nil),              // 13: constructs.EmptyNested
	(*Timestamp)(nil),                // 14: constructs.Timestamp
	(*Ref)(nil),                      // 15: constructs.Ref
	(*Oneof)(nil),                    // 16: constructs.Oneof
	(*Empty3_Int)(nil),               // 17: constructs.Empty3.Int
	(*Foo_Foo2)(nil),                 // 18: constructs.Foo.Foo2
	nil,                              // 19: constructs.Maps.Int32Int32Entry
	nil,                              // 20: constructs.Maps.Int64Int64Entry
	nil,                              // 21: constructs.Maps.Uint32Uint32Entry
	nil,                              // 22: constructs.Maps.Uint64Uint64Entry
	nil,                              // 23: constructs.Maps.Sint32Sint32Entry
	nil,                              // 24: constructs.Maps.Sint64Sint64Entry
	nil,                              // 25: constructs.Maps.Fixed32Fixed32Entry
	nil,                              // 26: constructs.Maps.Fixed64Fixed64Entry
	nil,                              // 27: constructs.Maps.Sfixed32Sfixed32Entry
	nil,                              // 28: constructs.Maps.Sfixed64Sfixed64Entry
	nil,                              // 29: constructs.Maps.BoolBoolEntry
	nil,                              // 30: constructs.Maps.StringStringEntry
	nil,                              // 31: constructs.Maps.StringBytesEntry
	nil,                              // 32: constructs.Maps.StringFloatEntry
	nil,                              // 33: constructs.Maps.StringDoubleEntry
	nil,                              // 34: constructs.Maps.StringFooEntry
	nil,                              // 35: constructs.Maps.StringBarEntry
	(*EmptyNested_EmptyNested1)(nil), // 36: constructs.EmptyNested.EmptyNested1
	(*EmptyNested_EmptyNested1_EmptyNested2)(nil), // 37: constructs.EmptyNested.EmptyNested1.EmptyNested2
	(*Ref_Bar)(nil),               // 38: constructs.Ref.Bar
	(*Ref_Foo)(nil),               // 39: constructs.Ref.Foo
	(*Ref_Foo_Baz)(nil),           // 40: constructs.Ref.Foo.Baz
	(*Ref_Foo_Bar)(nil),           // 41: constructs.Ref.Foo.Bar
	(*Ref_Foo_Baz_Gz)(nil),        // 42: constructs.Ref.Foo.Baz.Gz
	(*anypb.Any)(nil),             // 43: google.protobuf.Any
	(*fieldmaskpb.FieldMask)(nil), // 44: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),         // 45: google.protobuf.Empty
	(*timestamppb.Timestamp)(nil), // 46: google.protobuf.Timestamp
}
var file_test_constructs_input_proto_depIdxs = []int32{
	43, // 0: constructs.AnyInput.any:type_name -> google.protobuf.Any
	17, // 1: constructs.Empty3.i:type_name -> constructs.Empty3.Int
	44, // 2: constructs.Scalars.paths:type_name -> google.protobuf.FieldMask
	5,  // 3: constructs.Repeated.foo:type_name -> constructs.Foo
	0,  // 4: constructs.Repeated.bar:type_name -> constructs.Bar
	19, // 5: constructs.Maps.int32_int32:type_name -> constructs.Maps.Int32Int32Entry
	20, // 6: constructs.Maps.int64_int64:type_name -> constructs.Maps.Int64Int64Entry
	21, // 7: constructs.Maps.uint32_uint32:type_name -> constructs.Maps.Uint32Uint32Entry
	22, // 8: constructs.Maps.uint64_uint64:type_name -> constructs.Maps.Uint64Uint64Entry
	23, // 9: constructs.Maps.sint32_sint32:type_name -> constructs.Maps.Sint32Sint32Entry
	24, // 10: constructs.Maps.sint64_sint64:type_name -> constructs.Maps.Sint64Sint64Entry
	25, // 11: constructs.Maps.fixed32_fixed32:type_name -> constructs.Maps.Fixed32Fixed32Entry
	26, // 12: constructs.Maps.fixed64_fixed64:type_name -> constructs.Maps.Fixed64Fixed64Entry
	27, // 13: constructs.Maps.sfixed32_sfixed32:type_name -> constructs.Maps.Sfixed32Sfixed32Entry
	28, // 14: constructs.Maps.sfixed64_sfixed64:type_name -> constructs.Maps.Sfixed64Sfixed64Entry
	29, // 15: constructs.Maps.bool_bool:type_name -> constructs.Maps.BoolBoolEntry
	30, // 16: constructs.Maps.string_string:type_name -> constructs.Maps.StringStringEntry
	31, // 17: constructs.Maps.string_bytes:type_name -> constructs.Maps.StringBytesEntry
	32, // 18: constructs.Maps.string_float:type_name -> constructs.Maps.StringFloatEntry
	33, // 19: constructs.Maps.string_double:type_name -> constructs.Maps.StringDoubleEntry
	34, // 20: constructs.Maps.string_foo:type_name -> constructs.Maps.StringFooEntry
	35, // 21: constructs.Maps.string_bar:type_name -> constructs.Maps.StringBarEntry
	45, // 22: constructs.EmptyRecursive.nested1:type_name -> google.protobuf.Empty
	12, // 23: constructs.EmptyRecursive.empty:type_name -> constructs.EmptyRecursive
	36, // 24: constructs.EmptyNested.nested1:type_name -> constructs.EmptyNested.EmptyNested1
	45, // 25: constructs.Ref.empty:type_name -> google.protobuf.Empty
	14, // 26: constructs.Ref.local_time2:type_name -> constructs.Timestamp
	46, // 27: constructs.Ref.external:type_name -> google.protobuf.Timestamp
	14, // 28: constructs.Ref.local_time:type_name -> constructs.Timestamp
	6,  // 29: constructs.Ref.file:type_name -> constructs.Baz
	5,  // 30: constructs.Ref.file_msg:type_name -> constructs.Foo
	0,  // 31: constructs.Ref.file_enum:type_name -> constructs.Bar
	39, // 32: constructs.Ref.local:type_name -> constructs.Ref.Foo
	18, // 33: constructs.Ref.foreign:type_name -> constructs.Foo.Foo2
	1,  // 34: constructs.Ref.en1:type_name -> constructs.Ref.Foo.En
	2,  // 35: constructs.Ref.en2:type_name -> constructs.Ref.Foo.Bar.En
	42, // 36: constructs.Ref.gz:type_name -> constructs.Ref.Foo.Baz.Gz
	4,  // 37: constructs.Empty3.Int.e:type_name -> constructs.Empty3
	5,  // 38: constructs.Maps.StringFooEntry.value:type_name -> constructs.Foo
	0,  // 39: constructs.Maps.StringBarEntry.value:type_name -> constructs.Bar
	37, // 40: constructs.EmptyNested.EmptyNested1.nested2:type_name -> constructs.EmptyNested.EmptyNested1.EmptyNested2
	41, // 41: constructs.Ref.Foo.bar1:type_name -> constructs.Ref.Foo.Bar
	14, // 42: constructs.Ref.Foo.local_time2:type_name -> constructs.Timestamp
	46, // 43: constructs.Ref.Foo.external_time1:type_name -> google.protobuf.Timestamp
	38, // 44: constructs.Ref.Foo.bar2:type_name -> constructs.Ref.Bar
	1,  // 45: constructs.Ref.Foo.en1:type_name -> constructs.Ref.Foo.En
	2,  // 46: constructs.Ref.Foo.en2:type_name -> constructs.Ref.Foo.Bar.En
	7,  // 47: constructs.Constructs.Scalars_:input_type -> constructs.Scalars
	8,  // 48: constructs.Constructs.Repeated_:input_type -> constructs.Repeated
	9,  // 49: constructs.Constructs.Maps_:input_type -> constructs.Maps
	43, // 50: constructs.Constructs.Any_:input_type -> google.protobuf.Any
	45, // 51: constructs.Constructs.Empty_:input_type -> google.protobuf.Empty
	12, // 52: constructs.Constructs.Empty2_:input_type -> constructs.EmptyRecursive
	4,  // 53: constructs.Constructs.Empty3_:input_type -> constructs.Empty3
	15, // 54: constructs.Constructs.Ref_:input_type -> constructs.Ref
	16, // 55: constructs.Constructs.Oneof_:input_type -> constructs.Oneof
	11, // 56: constructs.Constructs.CallWithId:input_type -> constructs.Empty
	10, // 57: constructs.Constructs.Anyway_:input_type -> constructs.Any
	7,  // 58: constructs.Constructs.Scalars_:output_type -> constructs.Scalars
	8,  // 59: constructs.Constructs.Repeated_:output_type -> constructs.Repeated
	9,  // 60: constructs.Constructs.Maps_:output_type -> constructs.Maps
	43, // 61: constructs.Constructs.Any_:output_type -> google.protobuf.Any
	11, // 62: constructs.Constructs.Empty_:output_type -> constructs.Empty
	13, // 63: constructs.Constructs.Empty2_:output_type -> constructs.EmptyNested
	4,  // 64: constructs.Constructs.Empty3_:output_type -> constructs.Empty3
	15, // 65: constructs.Constructs.Ref_:output_type -> constructs.Ref
	16, // 66: constructs.Constructs.Oneof_:output_type -> constructs.Oneof
	11, // 67: constructs.Constructs.CallWithId:output_type -> constructs.Empty
	3,  // 68: constructs.Constructs.Anyway_:output_type -> constructs.AnyInput
	58, // [58:69] is the sub-list for method output_type
	47, // [47:58] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_test_constructs_input_proto_init() }
func file_test_constructs_input_proto_init() {
	if File_test_constructs_input_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_constructs_input_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Foo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Baz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scalars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Maps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Any); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRecursive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyNested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Oneof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty3_Int); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Foo_Foo2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyNested_EmptyNested1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyNested_EmptyNested1_EmptyNested2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Bar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Foo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Foo_Baz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Foo_Bar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_constructs_input_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Foo_Baz_Gz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_test_constructs_input_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Oneof_Param2)(nil),
		(*Oneof_Param3)(nil),
		(*Oneof_Param4)(nil),
		(*Oneof_Param5)(nil),
		(*Oneof_Param6)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_constructs_input_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_test_constructs_input_proto_goTypes,
		DependencyIndexes: file_test_constructs_input_proto_depIdxs,
		EnumInfos:         file_test_constructs_input_proto_enumTypes,
		MessageInfos:      file_test_constructs_input_proto_msgTypes,
	}.Build()
	File_test_constructs_input_proto = out.File
	file_test_constructs_input_proto_rawDesc = nil
	file_test_constructs_input_proto_goTypes = nil
	file_test_constructs_input_proto_depIdxs = nil
}
