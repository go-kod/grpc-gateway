// Code generated by kod struct2interface; DO NOT EDIT.

package server

import (
	"context"
	"net/http"

	"github.com/golang/protobuf/proto"
	"github.com/jhump/protoreflect/desc"
	"github.com/nautilus/graphql"
	"github.com/sysulq/graphql-gateway/pkg/generator"
	"github.com/vektah/gqlparser/v2/ast"
)

// Config is a component that implements ConfigComponent.
type ConfigComponent interface {
	Config() *Config
}

// server is a component that implements ServerComponent.
type ServerComponent interface {
	BuildServer(ctx context.Context) (http.Handler, error)
}

// caller is a component that implements Caller.
type Caller interface {
	GetDescs() []*desc.FileDescriptor
	Call(ctx context.Context, rpc *desc.MethodDescriptor, message proto.Message) (proto.Message, error)
}

// queryer is a component that implements Queryer.
type Queryer interface {
	Query(ctx context.Context, input *graphql.QueryInput, result interface{}) error
}

// repository is a component that implements Registry.
type Registry interface {
	SchemaDescriptorList() generator.SchemaDescriptorList
	FindMethodByName(op ast.Operation, name string) *desc.MethodDescriptor
	FindObjectByName(name string) *desc.MessageDescriptor
	FindObjectByFullyQualifiedName(fqn string) (*desc.MessageDescriptor, *ast.Definition)
	FindFieldByName(msg desc.Descriptor, name string) *desc.FieldDescriptor
	FindUnionFieldByMessageFQNAndName(fqn, name string) *desc.FieldDescriptor
	FindGraphqlFieldByProtoField(msg *ast.Definition, name string) *ast.FieldDefinition
}
